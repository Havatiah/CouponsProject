{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.data.service.ts","webpack:///./src/app/admin/companies-data-table/companies-data-table.component.css","webpack:///./src/app/admin/companies-data-table/companies-data-table.component.html","webpack:///./src/app/admin/companies-data-table/companies-data-table.component.ts","webpack:///./src/app/admin/create-company/create-company.component.css","webpack:///./src/app/admin/create-company/create-company.component.html","webpack:///./src/app/admin/create-company/create-company.component.ts","webpack:///./src/app/admin/create-customer/create-customer.component.css","webpack:///./src/app/admin/create-customer/create-customer.component.html","webpack:///./src/app/admin/create-customer/create-customer.component.ts","webpack:///./src/app/admin/customers-data-table/customers-data-table.component.css","webpack:///./src/app/admin/customers-data-table/customers-data-table.component.html","webpack:///./src/app/admin/customers-data-table/customers-data-table.component.ts","webpack:///./src/app/admin/show-all-companies/show-all-companies.component.css","webpack:///./src/app/admin/show-all-companies/show-all-companies.component.html","webpack:///./src/app/admin/show-all-companies/show-all-companies.component.ts","webpack:///./src/app/admin/show-all-customers/show-all-customers.component.css","webpack:///./src/app/admin/show-all-customers/show-all-customers.component.html","webpack:///./src/app/admin/show-all-customers/show-all-customers.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/company.ts","webpack:///./src/app/company/company-details/company-details.component.css","webpack:///./src/app/company/company-details/company-details.component.html","webpack:///./src/app/company/company-details/company-details.component.ts","webpack:///./src/app/company/company.company.data.service.ts","webpack:///./src/app/company/company.component.css","webpack:///./src/app/company/company.component.html","webpack:///./src/app/company/company.component.ts","webpack:///./src/app/company/coupon.ts","webpack:///./src/app/company/coupons-by-date/coupons-by-date.component.css","webpack:///./src/app/company/coupons-by-date/coupons-by-date.component.html","webpack:///./src/app/company/coupons-by-date/coupons-by-date.component.ts","webpack:///./src/app/company/coupons-by-price/coupons-by-price.component.css","webpack:///./src/app/company/coupons-by-price/coupons-by-price.component.html","webpack:///./src/app/company/coupons-by-price/coupons-by-price.component.ts","webpack:///./src/app/company/coupons-by-type/coupons-by-type.component.css","webpack:///./src/app/company/coupons-by-type/coupons-by-type.component.html","webpack:///./src/app/company/coupons-by-type/coupons-by-type.component.ts","webpack:///./src/app/company/coupons-data-table/coupons-data-table.component.css","webpack:///./src/app/company/coupons-data-table/coupons-data-table.component.html","webpack:///./src/app/company/coupons-data-table/coupons-data-table.component.ts","webpack:///./src/app/company/create-coupon/create-coupon.component.css","webpack:///./src/app/company/create-coupon/create-coupon.component.html","webpack:///./src/app/company/create-coupon/create-coupon.component.ts","webpack:///./src/app/company/show-all-coupons/show-all-coupons.component.css","webpack:///./src/app/company/show-all-coupons/show-all-coupons.component.html","webpack:///./src/app/company/show-all-coupons/show-all-coupons.component.ts","webpack:///./src/app/customer.ts","webpack:///./src/app/customer/customer-coupons-by-price/customer-coupons-by-price.component.css","webpack:///./src/app/customer/customer-coupons-by-price/customer-coupons-by-price.component.html","webpack:///./src/app/customer/customer-coupons-by-price/customer-coupons-by-price.component.ts","webpack:///./src/app/customer/customer-coupons-by-type/customer-coupons-by-type.component.css","webpack:///./src/app/customer/customer-coupons-by-type/customer-coupons-by-type.component.html","webpack:///./src/app/customer/customer-coupons-by-type/customer-coupons-by-type.component.ts","webpack:///./src/app/customer/customer-coupons-table/customer-coupons-table.component.css","webpack:///./src/app/customer/customer-coupons-table/customer-coupons-table.component.html","webpack:///./src/app/customer/customer-coupons-table/customer-coupons-table.component.ts","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customer/customer.customer.data.service.ts","webpack:///./src/app/customer/purchase-coupon/purchase-coupon.component.css","webpack:///./src/app/customer/purchase-coupon/purchase-coupon.component.html","webpack:///./src/app/customer/purchase-coupon/purchase-coupon.component.ts","webpack:///./src/app/customer/show-all-customer-coupons/show-all-customer-coupons.component.css","webpack:///./src/app/customer/show-all-customer-coupons/show-all-customer-coupons.component.html","webpack:///./src/app/customer/show-all-customer-coupons/show-all-customer-coupons.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n  <nav class =\\\"navbar navbar-fixed-top navbar-default navbar-dark\\\" align=\\\"left\\\">\\n    <div class =\\\"container\\\">\\n      <a class =\\\"navbar-brand\\\">CouponSystem</a>\\n      <ul class =\\\"nav navbar-nav\\\">\\n        <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['companies-data-table']\\\">Companies</a></li>\\n        <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['customers-data-table']\\\">Customers</a></li>\\n        <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\" >Logout</a></li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  \\n    <router-outlet></router-outlet>\\n \\n  </div>\\n  \\n  \"","import { AuthenticationService } from './../authentication.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private authService:AuthenticationService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    this.authService.logout().subscribe(res=>console.log(res));\n    this.router.navigate(['login']);\n  }\n\n}\n","import { Company } from '../company';\nimport { Customer } from '../customer';\nimport { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private headers: HttpHeaders=new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllCustomers() {\n    return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/admin/allCustomers\",{withCredentials:true});\n\n  }\n\n  getAllCompanies() {\n    return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/admin/allCompanies\",{withCredentials:true});\n  }\n\n  removeCustomerById(id: number) {\n    const url = \"http://localhost:8080/CouponsProjectWeb/rest/admin/customer/\" + id;\n    return this.http.delete(url,{withCredentials:true}).subscribe(data=>{});\n  }\n  removeCompanyById(id: number) {\n    const url=\"http://localhost:8080/CouponsProjectWeb/rest/admin/company/\" + id;\n    return this.http.delete(url,{withCredentials:true}).subscribe(data=>{});\n  }\n\n  createCustomer(customer: Customer):Observable<any>{\n    return this.http.post<any>(\"http://localhost:8080/CouponsProjectWeb/rest/admin/customer\",customer,{withCredentials:true});\n  }\n  createCompany(company:Company):Observable<any>{\n    \n    return this.http.post<any>(\"http://localhost:8080/CouponsProjectWeb/rest/admin/company\",company,{withCredentials:true});  \n  }\n   updateCustomer(customer:Customer):Observable<any>{\n    return this.http.put(\"http://localhost:8080/CouponsProjectWeb/rest/admin/customer\", customer,{withCredentials:true});\n   }\n updateCompany(company: Company):Observable<any>{\n    return this.http.put(\"http://localhost:8080/CouponsProjectWeb/rest/admin/company\",company,{withCredentials:true});\n   }\n  // readCompany(id: number):void{\n  //    this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/admin/getCompany\"+id);\n  // }\n  // readCompany(id: number):void{\n  //    this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/admin/getCompany\"+id);\n  // }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class =\\\"inNav navbar-fixed\\\" align=\\\"center\\\">\\n  <a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['show-all-companies']\\\">Show all companies</a>\\n<a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['create-company']\\\">Create a company</a>\\n</nav>\\n<br>\\n\\n\\n  <router-outlet></router-outlet>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-companies-data-table',\n  templateUrl: './companies-data-table.component.html',\n  styleUrls: ['./companies-data-table.component.css']\n})\nexport class CompaniesDataTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #companyForm=\\\"ngForm\\\" ngNativeValidate>\\n  <fieldset>\\n    <legend>Create Company:</legend>\\n    \\n    Company name:\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"newCompany.name\\\" required>\\n    <br> Create a password:\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"password\\\" [(ngModel)]=\\\"newCompany.password\\\" required>\\n    <br> Email:\\n    <br>\\n    <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"newCompany.email\\\" required>\\n    <br>\\n    <br>\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"success\\\">\\n        <strong>Success!</strong>  \\n      </div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n        <strong>Error!</strong> {{error.error.internalMessage}}\\n      </div>\\n  </fieldset>\\n</form>\"","import { DataService } from 'src/app/admin/admin.data.service';\n\nimport { Component, OnInit } from '@angular/core';\nimport { Company } from '../../company';\n\n@Component({\n  selector: 'app-create-company',\n  templateUrl: './create-company.component.html',\n  styleUrls: ['./create-company.component.css']\n})\nexport class CreateCompanyComponent implements OnInit {\n  newCompany: Company\n  error: string\n  success:boolean\n  constructor(private dataService: DataService) {\n    this.newCompany = new Company();\n  }\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.dataService.createCompany(this.newCompany).subscribe((res) => {this.success=true;this.error=\"\";},error=>{this.error=error;this.success=false});\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #customerForm=\\\"ngForm\\\" ngNativeValidate>\\n  <fieldset>\\n    <legend>Create Customer:</legend>\\n    \\n    Customer name:\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"newCustomer.name\\\" required>\\n    <br> Create a password:\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"password\\\" [(ngModel)]=\\\"newCustomer.password\\\" required>\\n    <br>\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"success\\\">\\n        <strong>Success!</strong>  \\n      </div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n        <strong>Error!</strong> {{error.error.internalMessage}}\\n      </div>\\n  </fieldset>\\n</form>\"","import { Customer } from './../../customer';\nimport { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/admin/admin.data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.css']\n})\nexport class CreateCustomerComponent implements OnInit {\n\n  newCustomer: Customer\n  error: string\n  success:boolean\n  constructor(private dataService: DataService, private router: Router) {\n    this.newCustomer = new Customer();\n   }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.dataService.createCustomer(this.newCustomer).subscribe((res) => {this.success=true;this.error=\"\";},error=>{this.error=error;this.success=false});\n  }\n\n}\n","module.exports = \"\"","module.exports = \"  <nav class =\\\"inNav navbar-fixed\\\" align=\\\"center\\\">\\n    <a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['show-all-customers']\\\">Show all customers</a>\\n  <a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['create-customer']\\\">Create a customer</a>\\n  </nav>\\n  <br>\\n\\n  <div class=\\\"jumbotron\\\">\\n    <router-outlet></router-outlet>\\n  <div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customers-data-table',\n  templateUrl: './customers-data-table.component.html',\n  styleUrls: ['./customers-data-table.component.css']\n})\nexport class CustomersDataTableComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Update a Company</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" id=\\\"name\\\"  [(ngModel)]=\\\"companyModel.name\\\" required>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"companyModel.password\\\" id=\\\"password\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"companyModel.email\\\" id=\\\"email\\\" required>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <div *ngIf=\\\"isError\\\" class =\\\"alert alert-danger\\\" >\\n        <strong>Error!</strong> {{errorMessage}}\\n      </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitUpdate()\\\">Submit</button>\\n      \\n      </div>\\n  </ng-template>\\n\\n  <div *ngIf=\\\"error\\\" class =\\\"alert alert-danger\\\" >\\n      <strong>Error!</strong> {{error.error.internalmessage}}\\n    </div>\\n<table class=\\\"table table-fixed\\\"*ngIf=\\\"isContent\\\"> \\n\\n    <thead>\\n      <tr>\\n      <th>\\n        ID\\n  </th>\\n      <th>\\n      Name\\n    </th>\\n    <th>\\n      Password\\n    </th>\\n    <th>\\n      Email\\n    </th>\\n    <th>\\n        Actions\\n      </th>\\n      </tr>\\n      \\n      \\n    </thead>\\n  \\n    <tbody>\\n      <tr *ngFor=\\\"let company of companies\\\">\\n      <td>{{company.id}}</td>\\n      <td>{{company.name}}</td>\\n      <td>{{company.password}}</td>\\n      <td>{{company.email}}</td>\\n      <td>\\n          <div class = \\\"row\\\">\\n                <a class =\\\"linkClass\\\" (click)=\\\"deleteCompany(company.id)\\\">\\n                    <span class =\\\"glyphicon glyphicon-remove\\\" style =\\\"padding-right: 10px;\\\"> </span>\\n                </a>\\n    \\n                <a class =\\\"linkClass\\\" (click) =\\\"open(content, company)\\\">\\n                    <span class =\\\"glyphicon glyphicon-refresh\\\"></span>\\n                </a>\\n          </div>\\n        </td>\\n\\n      </tr>\\n  \\n    </tbody>\\n  </table>\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/admin/admin.data.service';\nimport { Company } from '../../company';\nimport {NgbModal, NgbActiveModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-show-all-companies',\n  templateUrl: './show-all-companies.component.html',\n  styleUrls: ['./show-all-companies.component.css']\n})\nexport class ShowAllCompaniesComponent implements OnInit {\n\n  companies:Array<Company>;\n  companyModel:Company;\n  closeResult:string;\n  modelRef: any;\n  errorMessage:string;\n  isError:boolean;\n  error:string;\n  isContent:boolean;\n\n  constructor(private dataService:DataService,private modalService: NgbModal) { \n    this.companies = new Array<Company>();\n    this.companyModel = {} as Company;\n    this.isError=false;\n  }\n\n  ngOnInit() {\n    this.dataService.getAllCompanies().subscribe((res:Array<Company>)=>{this.companies = res; this.isContent=true; this.error=\"\";}\n    , error=>{this.error=error; this.isContent=false});\n  }\n\n  deleteCompany(id:number){\n\n    if(confirm(\"Are you sure ? \")){\n      this.dataService.removeCompanyById(id);\n      this.companies.filter(element => element.id == id).forEach(element => {\n        this.companies.splice(this.companies.indexOf(element), 1);\n      \n      });\n     \n    }\n  }\n\n  open(content, company){\n    this.companyModel = company;\n    this.modelRef = this.modalService.open(content);\n  }\n\n  submitUpdate(){\n    let modified = this.companies.find((el)=> el.id == this.companyModel.id);\n    this.dataService.updateCompany(this.companyModel).subscribe(res => { modified.name=this.companyModel.name;\n      modified.email = this.companyModel.email; \n      this.modelRef.close();\n      this.isError=false;}, err =>{this.isError=true;this.errorMessage = err.error.internalMessage} );\n}\n}\n","module.exports = \"\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\" style=\\\"top: 20%\\\">\\n    <h4 class=\\\"modal-title\\\">Update a customer</h4>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"input-group\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input id=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" [(ngModel)]=\\\"customerModel.name\\\">\\n    </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input id=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"customerModel.password\\\">\\n    </div>\\n    </div>\\n  <div class=\\\"modal-footer\\\">\\n    <div *ngIf=\\\"isError\\\" class=\\\"alert alert-danger\\\">\\n      <strong>Error!</strong> {{errorMessage}}\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitUpdate()\\\">Submit</button>\\n  </div>\\n\\n\\n</ng-template>\\n\\n<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">\\n  <strong>Error!</strong> {{error.error.internalmessage}}\\n</div>\\n\\n<div style=\\\"height: 600px; overflow: auto;\\\">\\n  <table class=\\\"table table-fixed\\\" *ngIf=\\\"isContent\\\">\\n    <thead>\\n      <tr>\\n        <th>\\n          ID\\n        </th>\\n        <th>\\n          Name\\n        </th>\\n        <th>\\n          Password\\n        </th>\\n        <th>\\n          Actions\\n        </th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr *ngFor=\\\"let customer of customers\\\">\\n        <td>{{customer.id}}</td>\\n        <td>{{customer.name}}</td>\\n        <td>{{customer.password}}</td>\\n\\n        <td>\\n          <div class=\\\"row\\\">\\n            <a class=\\\"linkClass\\\" (click)=\\\"deleteCustomer(customer.id)\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\" style=\\\"padding-right: 10px;\\\"> </span>\\n            </a>\\n\\n\\n            <a class=\\\"linkClass\\\" (click)=\\\"open(content,customer)\\\">\\n              <span class=\\\"glyphicon glyphicon-refresh\\\"></span>\\n            </a>\\n          </div>\\n        </td>\\n      </tr>\\n\\n    </tbody>\\n  </table>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/customer';\nimport { DataService } from 'src/app/admin/admin.data.service';\nimport {NgbModal, NgbActiveModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-show-all-customers',\n  templateUrl: './show-all-customers.component.html',\n  styleUrls: ['./show-all-customers.component.css']\n})\nexport class ShowAllCustomersComponent implements OnInit {\n\n  customers:Array<Customer>;\n  closeResult:string;\n  customerModel: any;\n  modelRef: any;\n  isError: boolean;\n  errorMessage: any;\n  error:string;\n  isContent:boolean;\n  constructor(private dataService:DataService, private modalService: NgbModal) {\n    this.customers = new Array<Customer>();\n    this.customerModel = {} as Customer;\n    this.isError = false;\n   }\n\n  ngOnInit() {\n    this.dataService.getAllCustomers().subscribe((res:Array<Customer>) => {this.customers = res; this.isContent=true; this.error=\"\";}\n    , error=>{this.error=error; this.isContent=false});\n  }\n  \n\n  deleteCustomer(id:number){\n\n    if(confirm(\"Are you sure ? \")){\n      this.dataService.removeCustomerById(id);\n      this.customers.filter(element => element.id == id).forEach(element => {\n        this.customers.splice(this.customers.indexOf(element), 1);\n      \n      });\n     \n    }}\n  \n\n  \n  open(content, customer){\n    this.customerModel = customer;\n    this.modelRef = this.modalService.open(content, {centered : true});\n  }\n\n  submitUpdate(){\n    this.dataService.updateCustomer(this.customerModel).subscribe(res => {\n     this.modelRef.close();this.isError=false;}, err =>{this.isError=true;this.errorMessage = err.error.internalMessage} );\n}\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n\n}\n","import { AuthGuardService } from './auth-guard.service';\nimport { CustomerCouponsTableComponent } from './customer/customer-coupons-table/customer-coupons-table.component';\nimport { CustomerCouponsByPriceComponent } from './customer/customer-coupons-by-price/customer-coupons-by-price.component';\nimport { CouponsDataTableComponent } from './company/coupons-data-table/coupons-data-table.component';\nimport { CompanyDetailsComponent } from './company/company-details/company-details.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { NgModule, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomersDataTableComponent } from './admin/customers-data-table/customers-data-table.component';\nimport { ShowAllCompaniesComponent } from './admin/show-all-companies/show-all-companies.component';\nimport { CreateCompanyComponent } from './admin/create-company/create-company.component';\nimport { CompaniesDataTableComponent } from './admin/companies-data-table/companies-data-table.component';\nimport { LoginComponent } from './login/login.component';\nimport { ShowAllCustomersComponent } from './admin/show-all-customers/show-all-customers.component';\nimport { CreateCustomerComponent } from './admin/create-customer/create-customer.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CreateCouponComponent } from './company/create-coupon/create-coupon.component';\nimport { ShowAllCouponsComponent } from './company/show-all-coupons/show-all-coupons.component';\nimport { CouponsByTypeComponent } from './company/coupons-by-type/coupons-by-type.component';\nimport { CouponsByPriceComponent } from './company/coupons-by-price/coupons-by-price.component';\nimport { CouponsByDateComponent } from './company/coupons-by-date/coupons-by-date.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { PurchaseCouponComponent } from './customer/purchase-coupon/purchase-coupon.component';\nimport { ShowAllCustomerCouponsComponent } from './customer/show-all-customer-coupons/show-all-customer-coupons.component';\nimport { CustomerCouponsByTypeComponent } from './customer/customer-coupons-by-type/customer-coupons-by-type.component';\n\nconst appRoutes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {path:'',canActivate:[AuthGuardService],children:[\n  {\n    path: 'admin', component: AdminComponent,\n    children: [\n      {\n        path: 'companies-data-table', component: CompaniesDataTableComponent,\n        children: [\n          { path: 'show-all-companies', component: ShowAllCompaniesComponent },\n          { path: 'create-company', component: CreateCompanyComponent }\n        ]\n      }, {\n        path: 'customers-data-table', component: CustomersDataTableComponent,\n        children: [\n          { path: 'show-all-customers', component: ShowAllCustomersComponent },\n          { path: 'create-customer', component: CreateCustomerComponent }\n        ]\n      }\n    ]\n  }, \n  {\n    path: 'company', component: CompanyComponent,\n    children: [\n      { path: 'company-details', component: CompanyDetailsComponent },\n      {\n        path: 'coupons-data-table', component: CouponsDataTableComponent,\n        children: [\n          { path: 'show-all-coupons', component: ShowAllCouponsComponent },\n          { path: 'coupons-by-type', component: CouponsByTypeComponent },\n          { path: 'coupons-by-price', component: CouponsByPriceComponent },\n          { path: 'coupons-by-date', component: CouponsByDateComponent }\n        ]\n      },\n      { path: 'create-coupon', component: CreateCouponComponent }\n    ]},\n  {\n     path: 'customer', component: CustomerComponent,\n  children: [\n    {path: 'purchase-coupon', component: PurchaseCouponComponent },\n    {path: 'customer-coupons-table', component: CustomerCouponsTableComponent,\n    children:[\n      {path: 'show-all-customer-coupons', component: ShowAllCustomerCouponsComponent},\n      { path:'customer-coupons-by-type', component: CustomerCouponsByTypeComponent},\n      { path: 'customer-coupons-by-price', component: CustomerCouponsByPriceComponent}\n    ]\n    }\n  ]\n\n  }\n  ]}\n\n]\n\n@NgModule({\n  imports: [\n    CommonModule, RouterModule.forRoot(appRoutes,{ useHash: true })\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* The side navigation menu */\\r\\n.sidenav {\\r\\n    height: 100%; /* 100% Full-height */\\r\\n    width: 0; /* 0 width - change this with JavaScript */\\r\\n    position: fixed; /* Stay in place */\\r\\n    z-index: 1; /* Stay on top */\\r\\n    top: 0; /* Stay at the top */\\r\\n    left: 0;\\r\\n    background-color: #111; /* Black*/\\r\\n    overflow-x: hidden; /* Disable horizontal scroll */\\r\\n    padding-top: 60px; /* Place content 60px from the top */\\r\\n    transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */\\r\\n}\\r\\n/* The navigation menu links */\\r\\n.sidenav a {\\r\\n    padding: 8px 8px 8px 32px;\\r\\n    text-decoration: none;\\r\\n    font-size: 25px;\\r\\n    color: #818181;\\r\\n    display: block;\\r\\n    transition: 0.3s;\\r\\n}\\r\\n/* When you mouse over the navigation links, change their color */\\r\\n.sidenav a:hover {\\r\\n    color: #f1f1f1;\\r\\n}\\r\\n/* Position and style the close button (top right corner) */\\r\\n.sidenav .closebtn {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 25px;\\r\\n    font-size: 36px;\\r\\n    margin-left: 50px;\\r\\n}\\r\\n/* Style page content - use this if you want to push the page content to the right when you open the side navigation */\\r\\n#main {\\r\\n    transition: margin-left .5s;\\r\\n    padding: 20px;\\r\\n}\\r\\n/* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */\\r\\n@media screen and (max-height: 450px) {\\r\\n    .sidenav {padding-top: 15px;}\\r\\n    .sidenav a {font-size: 18px;}\\r\\n}\\r\\n\"","module.exports = \"<div class = \\\"container bg\\\">\\n<nav class =\\\"navbar navbar-fixed-top navbar-default navbar-dark\\\" align=\\\"left\\\">\\n  <div class =\\\"container\\\">\\n    <a class =\\\"navbar-brand\\\">CouponSystem</a>\\n  </div>\\n</nav>\\n\\n<div class=\\\"jumbotron\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  \n  \n}\n","import { CompanyComponent } from './company/company.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from './admin/admin.data.service';\nimport {CompanyDataService} from './company/company.company.data.service';\nimport {CustomerDataService} from './customer/customer.customer.data.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CustomersDataTableComponent } from './admin/customers-data-table/customers-data-table.component';\nimport { CompaniesDataTableComponent } from './admin/companies-data-table/companies-data-table.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModalStack } from '@ng-bootstrap/ng-bootstrap/modal/modal-stack';\nimport { NgbModalBackdrop } from '@ng-bootstrap/ng-bootstrap/modal/modal-backdrop';\nimport { CreateCompanyComponent } from './admin/create-company/create-company.component';\nimport { ShowAllCompaniesComponent } from './admin/show-all-companies/show-all-companies.component';\nimport { FormsModule }   from '@angular/forms';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { CreateCustomerComponent } from './admin/create-customer/create-customer.component';\nimport { ShowAllCustomersComponent } from './admin/show-all-customers/show-all-customers.component';\nimport { CompanyDetailsComponent } from './company/company-details/company-details.component';\nimport { CouponsDataTableComponent } from './company/coupons-data-table/coupons-data-table.component';\nimport { CreateCouponComponent } from './company/create-coupon/create-coupon.component';\nimport { ShowAllCouponsComponent } from './company/show-all-coupons/show-all-coupons.component';\nimport { CouponsByPriceComponent } from './company/coupons-by-price/coupons-by-price.component';\nimport { CouponsByDateComponent } from './company/coupons-by-date/coupons-by-date.component';\nimport { CouponsByTypeComponent } from './company/coupons-by-type/coupons-by-type.component';\nimport { PurchaseCouponComponent } from './customer/purchase-coupon/purchase-coupon.component';\nimport { CustomerCouponsByTypeComponent } from './customer/customer-coupons-by-type/customer-coupons-by-type.component';\nimport { CustomerCouponsByPriceComponent } from './customer/customer-coupons-by-price/customer-coupons-by-price.component';\nimport { ShowAllCustomerCouponsComponent } from './customer/show-all-customer-coupons/show-all-customer-coupons.component';\nimport { CustomerCouponsTableComponent } from './customer/customer-coupons-table/customer-coupons-table.component';\nimport {CustomerComponent} from './customer/customer.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompaniesDataTableComponent,\n    CustomersDataTableComponent,\n    CreateCompanyComponent,\n    ShowAllCompaniesComponent,\n    AdminComponent,\n    LoginComponent,\n    CreateCustomerComponent,\n    ShowAllCustomersComponent,\n    CompanyComponent,\n    CompanyDetailsComponent,\n    CouponsDataTableComponent,\n    CreateCouponComponent,\n    ShowAllCouponsComponent,\n    CouponsByPriceComponent,\n    CouponsByDateComponent,\n    CouponsByTypeComponent,\n    PurchaseCouponComponent,\n    CustomerCouponsByTypeComponent,\n    CustomerCouponsByPriceComponent,\n    ShowAllCustomerCouponsComponent,\n    CustomerCouponsTableComponent,\n    CustomerComponent\n\n  ],\n  imports: [\n    BrowserModule ,HttpClientModule, AppRoutingModule,NgbModule.forRoot(),FormsModule\n  ],\n  providers: [  DataService, NgbModal, NgbModalStack, CompanyDataService, CustomerDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthenticationService } from './authentication.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router:Router,private authService:AuthenticationService) { }\n\n  canActivate():boolean{\n    if(!this.authService.isAuthenticated()){\n      this.router.navigate(['login']);\n      return false;\n    }\n\n    return true;\n\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private http:HttpClient) { \n  }\n\n  public setAuth(){\n    localStorage.setItem('isAuth','true');\n  }\n\n  \n  public isAuthenticated():boolean{\n    return localStorage.getItem('isAuth') != undefined;\n  }\n\n  authenticate(user:User):Observable<any>{\n\n    return this.http.post(\"http://localhost:8080/CouponsProjectWeb/rest/login/authenticate\", user, {withCredentials:true});\n\n  }\n\n  logout():Observable<any>{\n    localStorage.clear();\n    return this.http.post(\"http://localhost:8080/CouponsProjectWeb/rest/logout\",{withCredentials:true});\n  }\n}\n","export class Company {\n    constructor(){}\n    id : Number;\n    name : string;\n    password:string;\n    email:string;\n}\n","module.exports = \"\"","module.exports = \"\\n <h4>Company details:</h4>\\n <br>\\n <table class = \\\"table\\\">\\n  <thead>\\n    <tr>\\n    <th>ID</th>\\n    <th>Name</th>\\n  <th>Password</th>\\n  <th>Email</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n    <td>{{company.id}}</td>\\n    <td>{{company.name}}</td>\\n    <td>{{company.password}}</td>\\n    <td>{{company.email}}</td>\\n</tr>\\n</tbody>\\n</table>\"","import { CompanyDataService } from '../company.company.data.service';\nimport { Company } from './../../company';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company-details',\n  templateUrl: './company-details.component.html',\n  styleUrls: ['./company-details.component.css']\n})\nexport class CompanyDetailsComponent implements OnInit {\n\n  private company:Company;\n  constructor(private dataService:CompanyDataService) {\n    this.company = new Company();\n   }\n\n  ngOnInit() {\n    this.dataService.getCompany().subscribe((res:Company)=> this.company = res);\n  }\n}\n","import { Coupon } from './coupon';\r\nimport { Company } from '../company';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CompanyDataService {\r\n\r\n    private headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    createCoupon(coupon: Coupon): Observable<any> {\r\n\r\n        return this.http.post<any>(\"http://localhost:8080/CouponsProjectWeb/rest/company/createCoupon\", coupon, { withCredentials: true });\r\n    }\r\n    getCompany() {\r\n        return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/company/getCompany\", { withCredentials: true });\r\n\r\n    }\r\n    getCoupons() {\r\n        return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/company/getCoupons\", { withCredentials: true });\r\n\r\n    }\r\n    getCouponsByType(type: string) {\r\n        return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/company/getCouponsByType?type=\" + type, { withCredentials: true });\r\n    }\r\n    getCouponsByPrice(price: number) {\r\n        return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/company/getCouponsByPrice?price=\" + price, { withCredentials: true });\r\n    }\r\n    getCouponsByDate(date: Date) {\r\n        return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/company/getCouponsByDate?date=\" + date, { withCredentials: true });\r\n    }\r\n    updateCoupon(coupon: Coupon): Observable<any> {\r\n        return this.http.put(\"http://localhost:8080/CouponsProjectWeb/rest/company/coupon\", coupon, { withCredentials: true });\r\n    }\r\n\r\n    removeCoupons(id: number) {\r\n        const url = \"http://localhost:8080/CouponsProjectWeb/rest/company/coupon/\" + id;\r\n        return this.http.delete(url, { withCredentials: true }).subscribe(data => { });\r\n    }\r\n\r\n\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n  <nav class =\\\"navbar navbar-fixed-top navbar-default navbar-dark\\\" align=\\\"left\\\">\\n    <div class =\\\"container\\\">\\n      <a class =\\\"navbar-brand\\\">CouponSystem</a>\\n      <ul class =\\\"nav navbar-nav\\\">\\n        <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['company-details']\\\">Show My Details</a></li>\\n        <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['coupons-data-table']\\\">Show My Coupons</a></li>\\n        <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['create-coupon']\\\">Create New Coupon</a></li>\\n        <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\" >Logout</a></li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n    <router-outlet></router-outlet>\\n  </div> \\n \\n\"","import { CompanyDataService } from './company.company.data.service';\nimport { Company } from './../company';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n\n  private company:Company;\n  constructor(private dataService:CompanyDataService, private authService:AuthenticationService, private router:Router) { }\n\n  ngOnInit() {\n    this.dataService.getCompany().subscribe((res:Company)=> this.company = res);\n  }\n\n  logout(){\n    this.authService.logout().subscribe(res=>console.log(res));\n    this.router.navigate(['login']);\n  }\n\n}\n","export class Coupon {\r\n    constructor(){}\r\n    id : Number;\r\n    title : string;\r\n    type: string;\r\n    amount:number;\r\n    price:number;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    message:string;\r\n    image: string;\r\n\r\n}","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #showByDateForm=\\\"ngForm\\\">\\n    <fieldset>\\n      <legend>Show all coupons by date:</legend>\\n      <h4>Please select a maximun end date: </h4>\\n      <input type=\\\"date\\\" name=\\\"date\\\" [(ngModel)]=\\\"date\\\" required>\\n      <br>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!showByDateForm.form.valid\\\">\\n    </fieldset>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n      <strong>Error!</strong> {{error.error.internalMessage}}\\n    </div>\\n  </form>\\n  \\n  <table class=\\\"table table-fixed\\\" *ngIf=\\\"content\\\">\\n  \\n    <thead>\\n      <tr>\\n        <th>\\n          ID\\n        </th>\\n        <th>\\n          Title\\n        </th>\\n        <th>\\n          amount\\n        </th>\\n        <th>\\n          type\\n        </th>\\n        <th>\\n          price\\n        </th>\\n  \\n        <th>\\n          startDate\\n        </th>\\n        <th>\\n          endDate\\n        </th>\\n        <th>\\n          message\\n        </th>\\n        <th>\\n          image\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let coupon of coupons\\\">\\n        <td>{{coupon.id}}</td>\\n        <td>{{coupon.title}}</td>\\n        <td>{{coupon.amount}}</td>\\n        <td>{{coupon.type}}</td>\\n        <td>{{coupon.price}}</td>\\n        <td>{{coupon.startDate | date}}</td>\\n        <td>{{coupon.endDate | date}}</td>\\n        <td>{{coupon.message}}</td>\\n        <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='..static/assets/CouponError.png'\\\"></td>\\n      <td>\\n      </tr>\\n    </tbody>\\n  </table>\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/company/coupon';\nimport { CompanyDataService } from 'src/app/company/company.company.data.service';\n\n@Component({\n  selector: 'app-coupons-by-date',\n  templateUrl: './coupons-by-date.component.html',\n  styleUrls: ['./coupons-by-date.component.css']\n})\nexport class CouponsByDateComponent implements OnInit {\n\n  coupons:Array<Coupon>;\n  date:Date;\n  error:string;\n  content:boolean;\n  constructor(private dataService:CompanyDataService) { \n    this.coupons = new Array<Coupon>();\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.dataService.getCouponsByDate(this.date).subscribe((res:Array<Coupon>)=> {this.coupons = res; this.content=true; this.error=\"\"}, error=>{this.error=error; this.content=false});\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #showByPriceForm=\\\"ngForm\\\">\\n  <fieldset>\\n    <legend>Show all coupons by price:</legend>\\n    <h4>Please select a maximum price: </h4>\\n    <input type=\\\"number\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" required>\\n    <br>\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!showByPriceForm.form.valid\\\">\\n  </fieldset>\\n</form>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n  <strong>Error!</strong> {{error.error.internalMessage}}\\n</div>\\n<table class=\\\"table table-fixed\\\" *ngIf=\\\"content\\\">\\n\\n  <thead>\\n    <tr>\\n      <th>\\n        ID\\n      </th>\\n      <th>\\n        Title\\n      </th>\\n      <th>\\n        amount\\n      </th>\\n      <th>\\n        type\\n      </th>\\n      <th>\\n        price\\n      </th>\\n\\n      <th>\\n        startDate\\n      </th>\\n      <th>\\n        endDate\\n      </th>\\n      <th>\\n        message\\n      </th>\\n      <th>\\n        image\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let coupon of coupons\\\">\\n      <td>{{coupon.id}}</td>\\n      <td>{{coupon.title}}</td>\\n      <td>{{coupon.amount}}</td>\\n      <td>{{coupon.type}}</td>\\n      <td>{{coupon.price}}</td>\\n      <td>{{coupon.startDate | date}}</td>\\n      <td>{{coupon.endDate | date}}</td>\\n      <td>{{coupon.message}}</td>\\n      <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='../assets/CouponError.png'\\\"></td>\\n      <td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/company/coupon';\nimport { CompanyDataService } from 'src/app/company/company.company.data.service';\n\n@Component({\n  selector: 'app-coupons-by-price',\n  templateUrl: './coupons-by-price.component.html',\n  styleUrls: ['./coupons-by-price.component.css']\n})\nexport class CouponsByPriceComponent implements OnInit {\n\n  coupons:Array<Coupon>;\n  price:number;\n  error:string;\n  content:boolean;\n  constructor(private dataService:CompanyDataService) { \n    this.coupons = new Array<Coupon>();\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.dataService.getCouponsByPrice(this.price).subscribe((res:Array<Coupon>)=> {this.coupons = res;this.error=\"\"; this.content=true}, error=>{this.error=error; this.content=false  });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #showByTypeForm=\\\"ngForm\\\">\\n    <fieldset>\\n      <legend>Show all coupons by type:</legend>\\n      <h4>Please select a type: </h4>\\n      <!-- <input type=\\\"string\\\" name=\\\"type\\\" [(ngModel)]=\\\"type\\\" required> -->\\n      <br>\\n    <select [(ngModel)]=\\\"type\\\" name=\\\"type\\\" required type=\\\"text\\\">\\n      <option value = \\\"RESTAURANTS\\\">Restaurants</option>\\n      <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n      <option value=\\\"FOOD\\\">Food</option>\\n      <option value=\\\"HEALTH\\\">Health</option>\\n      <option value=\\\"SPORTS\\\">Sports</option>\\n      <option value=\\\"CAMPING\\\">Camping</option>\\n      <option value=\\\"TRAVELLING\\\">Travelling</option>\\n    </select>\\n    <br> \\n      <br>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!showByTypeForm.form.valid\\\">\\n    </fieldset>\\n  </form>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n      <strong>Error!</strong> {{error.error.internalMessage}}\\n    </div>\\n  <table class=\\\"table table-fixed\\\" *ngIf=\\\"content\\\">\\n  \\n    <thead>\\n      <tr>\\n        <th>\\n          ID\\n        </th>\\n        <th>\\n          Title\\n        </th>\\n        <th>\\n          amount\\n        </th>\\n        <th>\\n          type\\n        </th>\\n        <th>\\n          price\\n        </th>\\n  \\n        <th>\\n          startDate\\n        </th>\\n        <th>\\n          endDate\\n        </th>\\n        <th>\\n          message\\n        </th>\\n        <th>\\n          image\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let coupon of coupons\\\">\\n        <td>{{coupon.id}}</td>\\n        <td>{{coupon.title}}</td>\\n        <td>{{coupon.amount}}</td>\\n        <td>{{coupon.type}}</td>\\n        <td>{{coupon.price}}</td>\\n        <td>{{coupon.startDate | date}}</td>\\n        <td>{{coupon.endDate | date}}</td>\\n        <td>{{coupon.message}}</td>\\n        <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='../assets/CouponError.png'\\\"></td>\\n      <td>\\n      </tr>\\n    </tbody>\\n  </table>\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/company/coupon';\nimport { CompanyDataService } from 'src/app/company/company.company.data.service';\n\n@Component({\n  selector: 'app-coupons-by-type',\n  templateUrl: './coupons-by-type.component.html',\n  styleUrls: ['./coupons-by-type.component.css']\n})\nexport class CouponsByTypeComponent implements OnInit {\n  coupons:Array<Coupon>;\n  type:string;\n  error:string;\n  content:boolean;\n  constructor(private dataService:CompanyDataService) { \n    this.coupons = new Array<Coupon>();\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.dataService.getCouponsByType(this.type).subscribe((res:Array<Coupon>)=> {this.coupons = res; this.error=\"\";this.content=true}, error=>{this.error=error; this.content=false});\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<nav class =\\\"inNav navbar-fixed\\\" align=\\\"center\\\">\\n  <a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['show-all-coupons']\\\">Show all coupons</a>\\n<a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['coupons-by-type']\\\">coupons-by-type</a>\\n<a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['coupons-by-price']\\\">coupons-by-price</a>\\n<a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['coupons-by-date']\\\">coupons-by-date</a>\\n</nav>\\n<br>\\n\\n<div class=\\\"jumbotron\\\">\\n  <router-outlet></router-outlet>\\n<div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-coupons-data-table',\n  templateUrl: './coupons-data-table.component.html',\n  styleUrls: ['./coupons-data-table.component.css']\n})\nexport class CouponsDataTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #couponForm=\\\"ngForm\\\" ngNativeValidate>\\n  <fieldset>\\n    <legend>Create Coupon:</legend>\\n    \\n    Title:\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"newCoupon.title\\\" required>\\n    <br>\\n    Amount:\\n    <br>\\n    <input type=\\\"number\\\" name=\\\"amount\\\" [(ngModel)]=\\\"newCoupon.amount\\\" required>\\n    <br>\\n    Type:\\n    <br>\\n    <br>\\n    <select [(ngModel)]=\\\"newCoupon.type\\\" name=\\\"type\\\" required type=\\\"text\\\">\\n      <option value = \\\"RESTAURANTS\\\">Restaurants</option>\\n      <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n      <option value=\\\"FOOD\\\">Food</option>\\n      <option value=\\\"HEALTH\\\">Health</option>\\n      <option value=\\\"SPORTS\\\">Sports</option>\\n      <option value=\\\"CAMPING\\\">Camping</option>\\n      <option value=\\\"TRAVELLING\\\">Travelling</option>\\n    </select>\\n    <br> \\n    <br> \\n    Price:\\n    <br>\\n    <input type=\\\"number\\\" name=\\\"price\\\" [(ngModel)]=\\\"newCoupon.price\\\" required>\\n    <br>\\n    StartDate:\\n    <br>\\n    <input type=\\\"date\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"newCoupon.startDate\\\" required>\\n    <br>  \\n    EndDate:\\n    <br>\\n    <input type=\\\"date\\\" name=\\\"endDate\\\" [(ngModel)]=\\\"newCoupon.endDate\\\" required>\\n    <br> \\n    Message:\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"message\\\" [(ngModel)]=\\\"newCoupon.message\\\" required>\\n    <br> \\n    Image:\\n    <br>\\n    <input type=\\\"text\\\" name=\\\"image\\\" [(ngModel)]=\\\"newCoupon.image\\\" required>\\n    <br>\\n    <br>\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"success\\\">\\n        <strong>Success!</strong>  \\n      </div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n        <strong>Error!</strong> {{error.error.internalMessage}}\\n      </div>\\n  </fieldset>\\n</form>\\n\"","import { Coupon } from 'src/app/company/coupon';\nimport { Component, OnInit } from '@angular/core';\nimport {CompanyDataService } from 'src/app/company/company.company.data.service';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-coupon',\n  templateUrl: './create-coupon.component.html',\n  styleUrls: ['./create-coupon.component.css']\n})\nexport class CreateCouponComponent implements OnInit {\nnewCoupon:Coupon\nerror: string\nsuccess:boolean\n  constructor(private dataService: CompanyDataService, private router: Router) {\n    this.newCoupon = new Coupon();\n  }\n\n  ngOnInit() {\n  }\n  onSubmit() {\n      this.dataService.createCoupon(this.newCoupon).subscribe((res) => {this.success=true;this.error=\"\";},error=>{this.error=error;this.success=false});\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\"> \\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Update a Coupon</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n  <div class=\\\"form-group\\\">\\n \\n      <label for=\\\"title\\\">Title</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" id=\\\"title\\\" [(ngModel)]=\\\"couponModel.title\\\" required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"amount\\\">amount</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"amount\\\" name=\\\"amount\\\" id=\\\"amount\\\" [(ngModel)]=\\\"couponModel.amount\\\"\\n        required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"type\\\">type</label>\\n     \\n      <select [(ngModel)]=\\\"type\\\" name=\\\"type\\\" required type=\\\"text\\\">\\n        <option value = \\\"RESTAURANTS\\\">Restaurants</option>\\n        <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n        <option value=\\\"FOOD\\\">Food</option>\\n        <option value=\\\"HEALTH\\\">Health</option>\\n        <option value=\\\"SPORTS\\\">Sports</option>\\n        <option value=\\\"CAMPING\\\">Camping</option>\\n        <option value=\\\"TRAVELLING\\\">Travelling</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"price\\\">price</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"price\\\" name=\\\"price\\\" id=\\\"price\\\" [(ngModel)]=\\\"couponModel.price\\\" required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"startDate\\\">startDate</label>\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"startDate\\\" name=\\\"startDate\\\" [(ngModel)]=\\\"couponModel.startDate\\\" id=\\\"startDate\\\"\\n        required>\\n    </div>\\n    \\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"endDate\\\">endDate</label>\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"endDate\\\" name=\\\"endDate\\\" id=\\\"endDate\\\" [(ngModel)]=\\\"couponModel.endDate\\\"\\n        required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"message\\\">message</label>\\n      <input type=\\\"string\\\" class=\\\"form-control\\\" placeholder=\\\"message\\\" name=\\\"message\\\" id=\\\"message\\\" [(ngModel)]=\\\"couponModel.message\\\"\\n        required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"image\\\">image</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"image\\\" name=\\\"image\\\" id=\\\"image\\\" [(ngModel)]=\\\"couponModel.image\\\" required>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n      \\n    <div *ngIf=\\\"isError\\\" class=\\\"alert alert-danger\\\">\\n      <strong>Error!</strong> {{error}}\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitUpdate()\\\">Submit</button>\\n\\n  </div>\\n\\n\\n\\n</ng-template>\\n\\n\\n<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">\\n    <strong>Error!</strong> {{error.error.internalMessage}}\\n  </div>\\n<table class=\\\"table table-fixed\\\" *ngIf=\\\"isContent\\\">\\n\\n  <thead>\\n    <tr>\\n      <th>\\n        ID\\n      </th>\\n      <th>\\n        Title\\n      </th>\\n      <th>\\n        amount\\n      </th>\\n      <th>\\n        type\\n      </th>\\n      <th>\\n        price\\n      </th>\\n\\n      <th>\\n        startDate\\n      </th>\\n      <th>\\n        endDate\\n      </th>\\n      <th>\\n        message\\n      </th>\\n      <th>\\n        image\\n      </th>\\n      <th>\\n        Actions\\n      </th>\\n    </tr>\\n\\n\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let coupon of coupons\\\">\\n      <td>{{coupon.id}}</td>\\n      <td>{{coupon.title}}</td>\\n      <td>{{coupon.amount}}</td>\\n      <td>{{coupon.type}}</td>\\n      <td>{{coupon.price}}</td>\\n      <td>{{coupon.startDate | date}}</td>\\n      <td>{{coupon.endDate | date}}</td>\\n      <td>{{coupon.message}}</td>\\n      <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='../assets/CouponError.png'\\\"></td>\\n      <td>\\n        <div class=\\\"row\\\">\\n          <a class=\\\"linkClass\\\" (click)=\\\"deleteCoupon(coupon.id)\\\">\\n            <span class=\\\"glyphicon glyphicon-remove\\\" style=\\\"padding-right: 10px;\\\"> </span>\\n          </a>\\n\\n          <a class=\\\"linkClass\\\" (click)=\\\"open(content, coupon)\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\"></span>\\n          </a>\\n        </div>\\n      </td>\\n\\n    </tr>\\n\\n  </tbody>\\n</table>\"","import { Coupon } from './../coupon';\nimport { Component, OnInit } from '@angular/core';\nimport { CompanyDataService } from 'src/app/company/company.company.data.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-show-all-coupons',\n  templateUrl: './show-all-coupons.component.html',\n  styleUrls: ['./show-all-coupons.component.css']\n})\nexport class ShowAllCouponsComponent implements OnInit {\n\n    coupons:Array<Coupon>;\n    closeResult:string;\n    couponModel:Coupon;\n    modelRef:any;\n    isError:boolean;\n    error:string;\n    isContent:boolean;\n    constructor(private dataService:CompanyDataService,private modalService: NgbModal) { \n      this.coupons = new Array<Coupon>();\n      this.couponModel = {} as Coupon;\n      this.isError=false;\n      \n    }\n  \n    ngOnInit() {\n      this.dataService.getCoupons().subscribe((res:Array<Coupon>)=> {this.coupons = res; this.isContent=true}\n      , error=>{this.error=error; this.isContent=false});\n    }\n  \n    deleteCoupon(id:number){\n  \n      if(confirm(\"Are you sure ? \")){\n        this.dataService.removeCoupons(id);\n        this.coupons.filter(element => element.id == id).forEach(element => {\n          this.coupons.splice(this.coupons.indexOf(element), 1);\n        \n        });\n       \n      }\n    }\n  \n    open(content, coupon){\n      this.couponModel = coupon;\n      this.modelRef = this.modalService.open(content);\n    }\n  \n    submitUpdate(){\n      let modified = this.coupons.find((el)=> el.id == this.couponModel.id);\n      this.dataService.updateCoupon(this.couponModel).subscribe(res => { \n        modified.title=this.couponModel.title;\n        modified.amount=this.couponModel.amount;\n        modified.type=this.couponModel.type;\n        modified.price=this.couponModel.price;\n        modified.startDate = this.couponModel.startDate;\n        modified.endDate=this.couponModel.endDate;\n        modified.message=this.couponModel.message;\n        modified.image=this.couponModel.image;\n        this.modelRef.close();this.isError=false;}, err =>{this.isError=true;this.error = err.error.internalMessage} );\n  }\n  }","export class Customer {\n    constructor(){}\n    id:number;\n    name:string;\n    password:string;\n}\n\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\" #showCouponsByPriceForm=\\\"ngForm\\\">\\n    <fieldset>\\n      <legend>Show all coupons by price:</legend>\\n      <h4>Please select a maximum price: </h4>\\n      <input type=\\\"number\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" required>\\n      <br>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!showCouponsByPriceForm.form.valid\\\">\\n    </fieldset>\\n  </form>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <strong>Error!</strong>  {{error.error.internalMessage}}\\n  </div>\\n  <table class=\\\"table table-fixed\\\" *ngIf=\\\"isContent\\\">\\n  \\n    <thead>\\n      <tr>\\n        <th>\\n          ID\\n        </th>\\n        <th>\\n          Title\\n        </th>\\n        <th>\\n          amount\\n        </th>\\n        <th>\\n          type\\n        </th>\\n        <th>\\n          price\\n        </th>\\n  \\n        <th>\\n          startDate\\n        </th>\\n        <th>\\n          endDate\\n        </th>\\n        <th>\\n          message\\n        </th>\\n        <th>\\n          image\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let coupon of coupons\\\">\\n        <td>{{coupon.id}}</td>\\n        <td>{{coupon.title}}</td>\\n        <td>{{coupon.amount}}</td>\\n        <td>{{coupon.type}}</td>\\n        <td>{{coupon.price}}</td>\\n        <td>{{coupon.startDate | date}}</td>\\n        <td>{{coupon.endDate | date}}</td>\\n        <td>{{coupon.message}}</td>\\n        <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='../assets/CouponError.png'\\\"></td>\\n      <td>\\n      </tr>\\n    </tbody>\\n  </table>\"","import { Coupon } from 'src/app/company/coupon';\nimport { CustomerDataService } from './../customer.customer.data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-coupons-by-price',\n  templateUrl: './customer-coupons-by-price.component.html',\n  styleUrls: ['./customer-coupons-by-price.component.css']\n})\nexport class CustomerCouponsByPriceComponent implements OnInit {\n  error: string;\n  coupons: Array<Coupon>;\n  price: number;\n  isContent: boolean;\n  constructor(private dataService: CustomerDataService) {\n    this.coupons = new Array<Coupon>();\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.dataService.getCouponsByPrice(this.price).subscribe((res: Array<Coupon>) => { this.coupons = res; this.isContent = true; this.error = \"\" }\n      , error => { this.error = error; this.isContent = false });\n  }\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"error=false;onSubmit()\\\" #showCouponsByTypeForm=\\\"ngForm\\\">\\n    <fieldset>\\n      <legend>Show all coupons by type:</legend>\\n      <h4>Please select a type: </h4>\\n       <select [(ngModel)]=\\\"type\\\" name=\\\"type\\\" required type=\\\"text\\\">\\n          <option value = \\\"RESTAURANTS\\\">Restaurants</option>\\n          <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n          <option value=\\\"FOOD\\\">Food</option>\\n          <option value=\\\"HEALTH\\\">Health</option>\\n          <option value=\\\"SPORTS\\\">Sports</option>\\n          <option value=\\\"CAMPING\\\">Camping</option>\\n          <option value=\\\"TRAVELLING\\\">Travelling</option>\\n        </select>\\n      <br>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!showCouponsByTypeForm.form.valid\\\">\\n    </fieldset>\\n  </form>\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n    <strong>Error!</strong> {{error.error.internalMessage}}\\n  </div>\\n  \\n  <table class=\\\"table table-fixed\\\" *ngIf=\\\"isContent\\\">\\n  \\n    <thead>\\n      <tr>\\n        <th>\\n          ID\\n        </th>\\n        <th>\\n          Title\\n        </th>\\n        <th>\\n          amount\\n        </th>\\n        <th>\\n          type\\n        </th>\\n        <th>\\n          price\\n        </th>\\n  \\n        <th>\\n          startDate\\n        </th>\\n        <th>\\n          endDate\\n        </th>\\n        <th>\\n          message\\n        </th>\\n        <th>\\n          image\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let coupon of coupons\\\">\\n        <td>{{coupon.id}}</td>\\n        <td>{{coupon.title}}</td>\\n        <td>{{coupon.amount}}</td>\\n        <td>{{coupon.type}}</td>\\n        <td>{{coupon.price}}</td>\\n        <td>{{coupon.startDate | date}}</td>\\n        <td>{{coupon.endDate | date}}</td>\\n        <td>{{coupon.message}}</td>\\n        <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='../assets/CouponError.png'\\\"></td>\\n      <td>\\n      </tr>\\n    </tbody>\\n  </table>\"","import { CustomerDataService } from './../customer.customer.data.service';\nimport { Coupon } from 'src/app/company/coupon';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-coupons-by-type',\n  templateUrl: './customer-coupons-by-type.component.html',\n  styleUrls: ['./customer-coupons-by-type.component.css']\n})\nexport class CustomerCouponsByTypeComponent implements OnInit {\n\n  coupons:Array<Coupon>;\n  type:string;\n  error:string;\n  isContent:boolean;\n  constructor(private dataService:CustomerDataService) { \n    this.coupons = new Array<Coupon>();\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    \n    this.coupons = new Array<Coupon>();\n    this.dataService.getCouponsByType(this.type).subscribe((res:Array<Coupon>)=> {this.coupons = res; this.isContent=true}\n    , error=>{this.error=error; this.isContent=false});\n  }\n   \n  }\n\n","module.exports = \"\"","module.exports = \"<nav class =\\\"inNav navbar-fixed\\\" align=\\\"center\\\">\\n    <a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['show-all-customer-coupons']\\\">Show all coupons</a>\\n  <a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['customer-coupons-by-type']\\\">Coupons-by-type</a>\\n  <a [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['customer-coupons-by-price']\\\">Coupons-by-price</a>\\n  </nav>\\n  <br>\\n  \\n  <div class=\\\"jumbotron\\\">\\n    <router-outlet></router-outlet>\\n  <div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-coupons-table',\n  templateUrl: './customer-coupons-table.component.html',\n  styleUrls: ['./customer-coupons-table.component.css']\n})\nexport class CustomerCouponsTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class = \\\"container\\\">\\n    <nav class =\\\"navbar navbar-fixed-top navbar-default navbar-dark\\\" align=\\\"left\\\">\\n      <div class =\\\"container\\\">\\n        <a class =\\\"navbar-brand\\\">CouponSystem</a>\\n        <ul class =\\\"nav navbar-nav\\\">\\n          <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['customer-coupons-table']\\\">Show My Coupons</a></li>\\n          <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['purchase-coupon']\\\">Purchase a Coupon</a></li>\\n          <li class =\\\"nav-item\\\" > <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\" >Logout</a></li>\\n        </ul>\\n      </div>\\n    </nav>\\n    \\n    <div class=\\\"jumbotron\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n    </div> \\n   \\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './../authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  constructor(private authService:AuthenticationService, private router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logout(){\r\n    this.authService.logout().subscribe(res=>console.log(res));\r\n    this.router.navigate(['login']);\r\n  }  \r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Coupon } from '../company/coupon';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerDataService {\n\n  private headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  constructor(private http: HttpClient) {\n  }\n\n  purchaseCoupon(id: number): Observable<any> {\n\n    return this.http.post<any>(\"http://localhost:8080/CouponsProjectWeb/rest/customer/purchaseCoupon/\" + id, { withCredentials: true });\n  }\n  getCoupons() {\n    return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/customer/getCustomerCoupons\", { withCredentials: true });\n  }\n\n  getCouponsByType(type: string) {\n    return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/customer/getCustomerCouponsByType?type=\" + type, { withCredentials: true });\n  }\n\n  getCouponsByPrice(price: number) {\n    return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/customer/getCustomerCouponsByPrice?price=\" + price, { withCredentials: true });\n  }\n\n  getAllCouponsList() {\n    return this.http.get(\"http://localhost:8080/CouponsProjectWeb/rest/customer/getAllCoupons\", { withCredentials: true });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<table class=\\\"table table-fixed\\\">\\n\\n    <thead>\\n      <tr>\\n        <th>\\n          ID\\n        </th>\\n        <th>\\n          Title\\n        </th>\\n        <th>\\n          amount\\n        </th>\\n        <th>\\n          type\\n        </th>\\n        <th>\\n          price\\n        </th>\\n  \\n        <th>\\n          startDate\\n        </th>\\n        <th>\\n          endDate\\n        </th>\\n        <th>\\n          message\\n        </th>\\n        <th>\\n          image\\n        </th>\\n        <th>\\n          Purchase\\n        </th>\\n      </tr>\\n  \\n  \\n    </thead>\\n  \\n    <tbody>\\n      <tr *ngFor=\\\"let coupon of coupons; let i=index\\\">\\n        <td>{{coupon.id}}</td>\\n        <td>{{coupon.title}}</td>\\n        <td>{{coupon.amount}}</td>\\n        <td>{{coupon.type}}</td>\\n        <td>{{coupon.price}}</td>\\n        <td>{{coupon.startDate | date}}</td>\\n        <td>{{coupon.endDate | date}}</td>\\n        <td>{{coupon.message}}</td>\\n        <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='../assets/CouponError.png'\\\"></td>\\n      <td>\\n        <td>\\n          <div class=\\\"row\\\">\\n            <a class=\\\"linkClass\\\" (click)=\\\"success=[];error=[];purchaseCoupon(coupon.id,i)\\\">\\n              <span class=\\\"glyphicon glyphicon-shopping-cart\\\" style=\\\"padding-right: 10px;\\\"> </span>\\n            </a>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"alert alert-success\\\" *ngIf=\\\"success[i]\\\">\\n              <strong>Success!</strong>  \\n            </div>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error[i]\\\">\\n              <strong>Error!</strong> {{error[i].error.internalMessage}}\\n            </div>\\n          </div>\\n        </td>\\n  \\n      </tr>\\n  \\n    </tbody>\\n  </table>\"","import { CustomerDataService } from './../customer.customer.data.service';\nimport { Coupon } from 'src/app/company/coupon';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchase-coupon',\n  templateUrl: './purchase-coupon.component.html',\n  styleUrls: ['./purchase-coupon.component.css']\n})\nexport class PurchaseCouponComponent implements OnInit {\n\n  coupons:Array<Coupon>;\n  success:boolean[];\n  error\n  constructor(private dataService:CustomerDataService) { \n    this.coupons = new Array<Coupon>();\n    this.success=[];\n    this.error=[];\n  }\n\n  ngOnInit() {\n    this.dataService.getAllCouponsList().subscribe((res:Array<Coupon>)=> this.coupons = res);\n  }\n\n  purchaseCoupon(id:number,index:number){\n    if(confirm(\"Are you sure ? \")){\n      this.dataService.purchaseCoupon(id).subscribe(res =>{this.success[index]=true;},error=>this.error[index]=error);\n    } \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">\\n    <strong>Error!</strong> {{error.error.internalMessage}}\\n  </div>\\n\\n<table class=\\\"table table-fixed\\\" *ngIf=\\\"isContent\\\">\\n\\n    <thead>\\n      <tr>\\n        <th>\\n          ID\\n        </th>\\n        <th>\\n          Title\\n        </th>\\n        <th>\\n          amount\\n        </th>\\n        <th>\\n          type\\n        </th>\\n        <th>\\n          price\\n        </th>\\n  \\n        <th>\\n          startDate\\n        </th>\\n        <th>\\n          endDate\\n        </th>\\n        <th>\\n          message\\n        </th>\\n        <th>\\n          image\\n        </th>\\n      \\n      </tr>\\n  \\n  \\n    </thead>\\n  \\n    <tbody>\\n      <tr *ngFor=\\\"let coupon of coupons\\\">\\n        <td>{{coupon.id}}</td>\\n        <td>{{coupon.title}}</td>\\n        <td>{{coupon.amount}}</td>\\n        <td>{{coupon.type}}</td>\\n        <td>{{coupon.price}}</td>\\n        <td>{{coupon.startDate | date}}</td>\\n        <td>{{coupon.endDate | date}}</td>\\n        <td>{{coupon.message}}</td>\\n        <td><img [src]=\\\"coupon.image\\\" width=\\\"50px\\\" height=\\\"30px\\\" onerror=\\\"this.src='../assets/CouponError.png'\\\"></td>\\n      <td>\\n      </tr>\\n  \\n    </tbody>\\n  </table>\"","import { CustomerDataService } from './../customer.customer.data.service';\nimport { Coupon } from 'src/app/company/coupon';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-show-all-customer-coupons',\n  templateUrl: './show-all-customer-coupons.component.html',\n  styleUrls: ['./show-all-customer-coupons.component.css']\n})\nexport class ShowAllCustomerCouponsComponent implements OnInit {\n\n  coupons:Array<Coupon>;\n  error:string;\n  isContent:boolean;\n  constructor(private dataService:CustomerDataService) {\n    this.coupons = new Array<Coupon>();\n   }\n\n  ngOnInit() {\n    this.dataService.getCoupons().subscribe((res:Array<Coupon>)=> {this.coupons = res; this.isContent=true; this.error=\"\"}\n    , error=>{this.error=error; this.isContent=false});\n  }\n  }\n\n\n","module.exports = \"\"","module.exports = \"<h2>Login</h2>\\n<form  (ngSubmit)=\\\"login()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)] =\\\"credentials.username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" required />\\n        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\"  [(ngModel)]=\\\"credentials.password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors } \\\" required />\\n        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n\\n      <label for=\\\"userType\\\">User Type</label>\\n      <select name=\\\"userType\\\" [(ngModel)]=\\\"credentials.userType\\\" class=\\\"selectpicker\\\">\\n        <option value=\\\"Customer\\\">Customer</option>\\n        <option value=\\\"Company\\\">Company</option>\\n        <option value=\\\"Admin\\\">Admin</option>\\n      </select>\\n\\n\\n    </div>\\n <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n  <strong>Error!</strong> {{error}}\\n</div>\\n    <button type =\\\"submit\\\" class =\\\"btn btn-primary\\\">Login</button>\\n   \\n</form>\"","import { Router } from '@angular/router';\nimport { AuthenticationService } from './../authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nisError:boolean;\nerror:string;\n  private credentials:User = {username:'',password:'',userType:''};\n  constructor(private authService:AuthenticationService, private router:Router) { \n    \n  }\n\n  ngOnInit() {\n  }\n\n  login(){\n    this.authService.authenticate(this.credentials).subscribe(res =>{\n      this.authService.setAuth();\n    if(this.credentials.userType==\"Admin\"){\n      this.router.navigate(['admin']);\n    }\n    else if(this.credentials.userType==\"Company\"){\n      this.router.navigate(['company']);\n    }\n    else if(this.credentials.userType==\"Customer\"){\n      this.router.navigate(['customer']);\n    }\n  }, error => {this.error=\"Login failed. Please try again!\"});\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}